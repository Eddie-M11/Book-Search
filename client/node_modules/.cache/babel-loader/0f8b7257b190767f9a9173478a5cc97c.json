{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emona\\\\Desktop\\\\Bootcamp\\\\Book-Search\\\\client\\\\src\\\\pages\\\\SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Jumbotron, Container, CardColumns, Card, Button } from \"react-bootstrap\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ME } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId, saveBookIds } from \"../utils/localStorage\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || [];\n  const [removeBook, {\n    error\n  }] = useMutation(REMOVE_BOOK);\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const response = await removeBook({\n        variables: {\n          bookId\n        }\n      });\n      if (!response) {\n        throw new Error(\"something went wrong!\");\n      }\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  const savedBookIds = userData.savedBooks.map(book => book.bookId);\n  saveBookIds(savedBookIds);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? \"book\" : \"books\"}:` : \"You have no saved books!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"YNr5zEWznJUZb057tKfkZQmowig=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","Jumbotron","Container","CardColumns","Card","Button","useQuery","useMutation","GET_ME","Auth","removeBookId","saveBookIds","REMOVE_BOOK","SavedBooks","loading","data","userData","me","removeBook","error","handleDeleteBook","bookId","token","loggedIn","getToken","response","variables","Error","err","console","savedBookIds","savedBooks","map","book","length","image","title","authors","description"],"sources":["C:/Users/emona/Desktop/Bootcamp/Book-Search/client/src/pages/SavedBooks.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  CardColumns,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\n\r\nimport { GET_ME } from \"../utils/queries\";\r\nimport Auth from \"../utils/auth\";\r\nimport { removeBookId, saveBookIds } from \"../utils/localStorage\";\r\nimport { REMOVE_BOOK } from \"../utils/mutations\";\r\n\r\nconst SavedBooks = () => {\r\n  const { loading, data } = useQuery(GET_ME);\r\n  const userData = data?.me || [];\r\n\r\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\r\n\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await removeBook({\r\n        variables: { bookId },\r\n      });\r\n\r\n      if (!response) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      removeBookId(bookId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (loading) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  const savedBookIds = userData.savedBooks.map((book) => book.bookId);\r\n  saveBookIds(savedBookIds);\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${\r\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\r\n              }:`\r\n            : \"You have no saved books!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border=\"dark\">\r\n                {book.image ? (\r\n                  <Card.Img\r\n                    src={book.image}\r\n                    alt={`The cover for ${book.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className=\"small\">Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteBook(book.bookId)}\r\n                  >\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}