{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emona\\\\Desktop\\\\Bootcamp\\\\Book-Search\\\\client\\\\src\\\\components\\\\SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({\n      ...userFormData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    try {\n      const response = await createUser(userFormData);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        token,\n        user\n      } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        dismissible: true,\n        onClose: () => setShowAlert(false),\n        show: showAlert,\n        variant: \"danger\",\n        children: \"Something went wrong with your signup!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Your username\",\n          name: \"username\",\n          onChange: handleInputChange,\n          value: userFormData.username,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Username is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Your email address\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: userFormData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Email is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Your password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: userFormData.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Password is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(userFormData.username && userFormData.email && userFormData.password),\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SignupForm, \"DebFNzsNA5PGxzHxp2Z98Rzew80=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","createUser","Auth","SignupForm","userFormData","setUserFormData","username","email","password","validated","showAlert","setShowAlert","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","response","ok","Error","token","user","json","console","log","login","err","error"],"sources":["C:/Users/emona/Desktop/Bootcamp/Book-Search/client/src/components/SignupForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { createUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await createUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}